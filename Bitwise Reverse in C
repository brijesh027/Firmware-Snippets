#include <stdio.h>

/*
This simple C code is capable of reversing the bits of any size type of number.
Try using known data types as per your compiler like unit32_t, uint16_t and uint8_t in place of int for the below sample
*/
int j = 4;  //sample number to be reversed bit-wise
int temp = 0; //computation storage variable
int l =1;

int main()
{
    int size = 8 * sizeof(j);
    int i = 0;
    printf("%d\n", size);
    while(size>0)
    {
        
        temp = temp | (((j & (l << i))?1:0) << size); // Using bit shift and ternary operator to execute operation in a single line
        printf("%d, %d, %d\n", ((j & (1 << i))?1:0), size, temp); //have fun watching the bits of unshifted input and anticipate the output
        size--;
        i++;
    }
    printf("Reversed number is %d", temp);
    return 0;
}
